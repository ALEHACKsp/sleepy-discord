(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{307:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),s=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},f=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=s(t),f=r,b=u["".concat(a,".").concat(f)]||u[f]||p[f]||c;return t?i.a.createElement(b,o(o({ref:n},l),{},{components:t})):i.a.createElement(b,o({ref:n},l))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,a=new Array(c);a[0]=f;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var l=2;l<c;l++)a[l]=t[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},87:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return d})),t.d(n,"default",(function(){return s}));var r=t(3),i=t(7),c=(t(0),t(307)),a={title:"include/sleepy_discord/asio_include.h"},o={unversionedId:"reference/Files/asio__include_8h",id:"reference/Files/asio__include_8h",isDocsHomePage:!1,title:"include/sleepy_discord/asio_include.h",description:"Defines",source:"@site/docs/reference/Files/asio__include_8h.md",slug:"/reference/Files/asio__include_8h",permalink:"/sleepy-discord/docs/reference/Files/asio__include_8h",version:"current",sidebar:"Reference",previous:{title:"sleepy_discord/asignments_client.cpp",permalink:"/sleepy-discord/docs/reference/Files/asignments__client_8cpp"},next:{title:"include/sleepy_discord/asio_schedule.h",permalink:"/sleepy-discord/docs/reference/Files/asio__schedule_8h"}},d=[{value:"Defines",id:"defines",children:[]},{value:"Macro Documentation",id:"macro-documentation",children:[{value:"define ASIO_STANDALONE",id:"define-asio_standalone",children:[]}]},{value:"Source code",id:"source-code",children:[]}],l={toc:d};function s(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"defines"},"Defines"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null}),Object(c.b)("th",{parentName:"tr",align:null},"Name"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null}),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("strong",{parentName:"td"},Object(c.b)("a",{parentName:"strong",href:"/docs/reference/Files/asio__include_8h#define-asio_standalone"},"ASIO_STANDALONE")))))),Object(c.b)("h2",{id:"macro-documentation"},"Macro Documentation"),Object(c.b)("h3",{id:"define-asio_standalone"},"define ASIO_STANDALONE"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"#define ASIO_STANDALONE \n")),Object(c.b)("h2",{id:"source-code"},"Source code"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-cpp"},"#pragma once\n#define ASIO_STANDALONE\n\n#ifdef _WIN32\n#include <winsock2.h>\n#elif defined(unix) || defined(__unix__) || defined(__unix)\n#include <netinet/in.h>\n#endif\n\n#if defined(SLEEPY_DISCORD_CMAKE) && defined(EXISTENT_ASIO)\n    #include <asio.hpp>\n#else\n    #include <asio.hpp>\n    #ifdef NONEXISTENT_ASIO\n        #undef ASIO_STANDALONE\n        #define SLEEPY_USE_BOOST\n    #endif\n#endif\n\n#if defined(SLEEPY_USE_BOOST) || defined(EXISTENT_BOOST_ASIO)\n    #include <boost/asio.hpp>\n    #ifndef NONEXISTENT_BOOST_ASIO\n        #undef NONEXISTENT_ASIO\n        namespace asio = boost::asio;\n    #endif\n#endif\n")),Object(c.b)("hr",null),Object(c.b)("p",null,"Updated on 24 February 2021 at 15:10:04 UTC"))}s.isMDXComponent=!0}}]);